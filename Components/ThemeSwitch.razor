@using Hangman.Services
@inject ThemeService ThemeService

<div class="theme-switch">
    <label class="switch">
        <input type="checkbox" @bind="IsDarkMode">
        <span class="slider">
            <span class="switch-handle"></span>
        </span>
    </label>
</div>

<style>
    .theme-switch {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
        background-color: var(--card-bg);
        padding: 10px;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        border: 1px solid var(--border-color);
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 100px;
        perspective: 100px;
    }

    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: var(--switch-bg);
        transition: 0.4s;
        border-radius: 8px;
        box-shadow: inset 0 2px 4px rgba(0,0,0,0.2);
    }

    .switch-handle {
        position: absolute;
        height: 40px;
        width: 40px;
        left: 10px;
        bottom: 10px;
        background-color: var(--primary-color);
        transition: 0.4s;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

    input:checked + .slider .switch-handle {
        transform: translateY(-40px);
    }

    input:focus + .slider {
        box-shadow: 0 0 1px var(--primary-color);
    }
</style>

@code {
    private bool IsDarkMode
    {
        get => ThemeService.IsDarkMode;
        set
        {
            if (ThemeService.IsDarkMode != value)
            {
                ThemeService.ToggleTheme();
            }
        }
    }
}
